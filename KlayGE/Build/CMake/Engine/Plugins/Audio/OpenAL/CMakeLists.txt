SET(LIB_NAME KlayGE_AudioEngine_OpenAL)

SET(OPENAL_AE_SOURCE_FILES
	${KLAYGE_PROJECT_DIR}/Plugins/Src/Audio/OpenAL/OALAudioEngine.cpp
	${KLAYGE_PROJECT_DIR}/Plugins/Src/Audio/OpenAL/OALAudioFactory.cpp
	${KLAYGE_PROJECT_DIR}/Plugins/Src/Audio/OpenAL/OALMusicBuffer.cpp
	${KLAYGE_PROJECT_DIR}/Plugins/Src/Audio/OpenAL/OALSoundBuffer.cpp
)

SET(OPENAL_AE_HEADER_FILES
	${KLAYGE_PROJECT_DIR}/Plugins/Include/KlayGE/OpenAL/OALAudio.hpp
)

SOURCE_GROUP("Source Files" FILES ${OPENAL_AE_SOURCE_FILES})
SOURCE_GROUP("Header Files" FILES ${OPENAL_AE_HEADER_FILES})

INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../External/openal-soft/include)
INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../KFL/include)
INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/Core/Include)
INCLUDE_DIRECTORIES(${KLAYGE_PROJECT_DIR}/Plugins/Include)
if(KLAYGE_PLATFORM_WINDOWS OR KLAYGE_PLATFORM_ANDROID)
	LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../External/lib/openal-soft/${KLAYGE_PLATFORM_NAME})
endif()
LINK_DIRECTORIES(${KLAYGE_PROJECT_DIR}/../KFL/lib/${KLAYGE_PLATFORM_NAME})
IF(KLAYGE_PLATFORM_DARWIN OR KLAYGE_PLATFORM_LINUX)
	LINK_DIRECTORIES(${KLAYGE_BIN_DIR})
ELSE()
	LINK_DIRECTORIES(${KLAYGE_OUTPUT_DIR})
ENDIF()

ADD_LIBRARY(${LIB_NAME} ${KLAYGE_PREFERRED_LIB_TYPE}
	${OPENAL_AE_SOURCE_FILES} ${OPENAL_AE_HEADER_FILES}
)
ADD_DEPENDENCIES(${LIB_NAME} ${KLAYGE_CORELIB_NAME})

IF(KLAYGE_PLATFORM_WINDOWS OR KLAYGE_PLATFORM_ANDROID)
	add_dependencies(${LIB_NAME} OpenAL)
	SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES}
		debug OpenAL${KLAYGE_OUTPUT_SUFFIX}_d optimized OpenAL${KLAYGE_OUTPUT_SUFFIX})
ELSEIF(KLAYGE_PLATFORM_DARWIN OR KLAYGE_PLATFORM_IOS)
	FIND_LIBRARY(OPENAL OpenAL "/")
	SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES}
		${OPENAL})
ELSE()
	SET(EXTRA_LINKED_LIBRARIES ${EXTRA_LINKED_LIBRARIES}
		openal)
ENDIF()

SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES
	ARCHIVE_OUTPUT_DIRECTORY ${KLAYGE_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${KLAYGE_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${KLAYGE_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${KLAYGE_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL ${KLAYGE_OUTPUT_DIR}
	RUNTIME_OUTPUT_DIRECTORY ${KLAYGE_BIN_DIR}/Audio
	RUNTIME_OUTPUT_DIRECTORY_DEBUG ${KLAYGE_BIN_DIR}/Audio
	RUNTIME_OUTPUT_DIRECTORY_RELEASE ${KLAYGE_BIN_DIR}/Audio
	RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${KLAYGE_BIN_DIR}/Audio
	RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL ${KLAYGE_BIN_DIR}/Audio
	LIBRARY_OUTPUT_DIRECTORY ${KLAYGE_BIN_DIR}/Audio
	LIBRARY_OUTPUT_DIRECTORY_DEBUG ${KLAYGE_BIN_DIR}/Audio
	LIBRARY_OUTPUT_DIRECTORY_RELEASE ${KLAYGE_BIN_DIR}/Audio
	LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO ${KLAYGE_BIN_DIR}/Audio
	LIBRARY_OUTPUT_DIRECTORY_MINSIZEREL ${KLAYGE_BIN_DIR}/Audio
	PROJECT_LABEL ${LIB_NAME}
	DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX}
	OUTPUT_NAME ${LIB_NAME}${KLAYGE_OUTPUT_SUFFIX}
	FOLDER "KlayGE/Engine/Plugins/Audio"
)

KLAYGE_ADD_PRECOMPILED_HEADER(${LIB_NAME} "${KLAYGE_PROJECT_DIR}/Core/Include/KlayGE/KlayGE.hpp")

TARGET_LINK_LIBRARIES(${LIB_NAME}
	${EXTRA_LINKED_LIBRARIES}
	debug KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}_d optimized KlayGE_Core${KLAYGE_OUTPUT_SUFFIX}
	debug KFL${KLAYGE_OUTPUT_SUFFIX}_d optimized KFL${KLAYGE_OUTPUT_SUFFIX}
)

ADD_DEPENDENCIES(AllInEngine ${LIB_NAME})
