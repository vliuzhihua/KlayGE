PROJECT(freetype C)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.6)

SET(FREETYPE_MAJOR_VERSION 2)
SET(FREETYPE_MINOR_VERSION 8)
SET(FREETYPE_PATCH_VERSION 1)
SET(FREETYPE_VERSION ${FREETYPE_MAJOR_VERSION}.${FREETYPE_MINOR_VERSION}.${FREETYPE_PATCH_VERSION})

SET(FREETYPE_PROJECT_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../..")
SET(KLAYGE_ROOT_DIR "${FREETYPE_PROJECT_DIR}/../..")

INCLUDE(${KLAYGE_ROOT_DIR}/cmake/Common.cmake)
INCLUDE(${KLAYGE_ROOT_DIR}/cmake/Platform.cmake)
INCLUDE(${KLAYGE_ROOT_DIR}/cmake/Compiler.cmake)
INCLUDE(${KLAYGE_ROOT_DIR}/External/Build/CMake/ExternalCommon.cmake)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

SET(FREETYPE_OUTPUT_DIR "${FREETYPE_PROJECT_DIR}/lib/${KLAYGE_PLATFORM_NAME}")
SET(REL_PATH "External/Downloads/freetype-${FREETYPE_VERSION}.patched.7z")
SET(SEVENZIP_PATH "${KLAYGE_ROOT_DIR}/External/Downloads/${KLAYGE_HOST_PLATFORM_NAME}/7z")
SET(PACKAGE_FILE_ID "0f66efa1ef9d1b23a23716799e559afa9cf72b2d")

DOWNLOAD_PACKAGE("freetype" ${REL_PATH} ${PACKAGE_FILE_ID} "README")

FOREACH(flag_var
		CMAKE_C_FLAGS CMAKE_CXX_FLAGS)
	IF(KLAYGE_COMPILER_MSVC)
		STRING(REPLACE "/W4" "/W0" ${flag_var} "${${flag_var}}")
		STRING(REPLACE "/WX" "/WX-" ${flag_var} "${${flag_var}}")
	ELSE()
		STRING(REPLACE "-Wall" "-w" ${flag_var} "${${flag_var}}")
		STRING(REPLACE "-Werror" "-Wno-error" ${flag_var} "${${flag_var}}")
	ENDIF()
ENDFOREACH()

SET(WITH_ZLIB OFF)
SET(WITH_BZip2 OFF)
SET(WITH_PNG OFF)
SET(WITH_HarfBuzz OFF)

ADD_SUBDIRECTORY(${FREETYPE_PROJECT_DIR} "${CMAKE_CURRENT_BINARY_DIR}/freetype")

SET_TARGET_PROPERTIES(freetype PROPERTIES
	ARCHIVE_OUTPUT_DIRECTORY ${FREETYPE_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${FREETYPE_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${FREETYPE_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${FREETYPE_OUTPUT_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL ${FREETYPE_OUTPUT_DIR}
	PROJECT_LABEL freetype
	DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX}
	OUTPUT_NAME freetype${KLAYGE_OUTPUT_SUFFIX}
)
